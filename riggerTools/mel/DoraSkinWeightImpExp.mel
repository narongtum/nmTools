







global string $gDoraSkinWeight_ver = "3.7.0";





proc string vtx2uv( string $vtx )
	{
	string $ret;
	string $workString[];
	
	$workString= `polyListComponentConversion -fv -tuv $vtx`;
	
	
	
	$ret= `substitute ".map" $workString[0] ".uv"`;
	
	return( $ret );
	}




proc string checkOverlapsList( string $list[] )
	{
	string $shorteList[];
	string $overlapsList[];
	string $overlapsList2[];
	int $overlapsListN;
	int $i, $j, $k;
	string $retString;
	int $overlapsCount;
	
	$shorteList = stringArrayRemoveDuplicates($list);
	if( size($list)==size($shorteList) )return("");
	else
		{
		
		$overlapsListN=0;
		for( $i=0 ; $i<(size( $list )-1) ; $i++ )
			{
			for( $j=$i+1 ; $j<size( $list ) ; $j++ )
				{
				if( $list[$i]==$list[$j] )
					{
					$overlapsList[$overlapsListN]= $list[$i];
					$overlapsListN++;
					}
				}
			}
		
		$overlapsList2= stringArrayRemoveDuplicates($overlapsList);
		
		$retString="";
		for( $i=0 ; $i<size($overlapsList2) ; $i++ )
			{
			$overlapsCount= stringArrayCount( $overlapsList2[$i], $list );
			$retString+= ( $overlapsList2[$i] + " (" + $overlapsCount + ") " );
			if( $i<size($overlapsList2)-1 )
				{
				$retString+= ", ";
				}
			}
		return ( $retString );
		}
	}




proc string extCheck( string $name, string $ext )
	{
	string $ret;
	
	$ret= $name;
	if( size($name)<=size($ext) )
		{
		$ret= $name + $ext;
		
		}
	else
		{
		if( tolower(substring( $ret, size($ret)-(size($ext)-1), size($ret) )) != $ext )
			{
			$ret= $name + $ext;
			}
		}
	return $ret;
	}




proc string shapeName( string $obj )
	{
	string $shape[];	

	$shape= `listHistory $obj`;
	$shape= `ls -type shape $shape`;
	
	if( size($shape)==0 )return( "" );
	else return( $shape[0] );
	}




proc vector vtx2vector( string $vtxName )
	{
	vector $vtx;
	float $workXYZf[];

	$workXYZf= `pointPosition -w $vtxName`;
	$vtx= <<$workXYZf[0], $workXYZf[1], $workXYZf[2]>>;
	
	return( $vtx );
	}





proc vector vtx2uvVector( string $vtxName )
	{
	vector $vtx;
	float $workXYZf[];
	string $workString;
	
	$workString= vtx2uv( $vtxName );
	$workXYZf= `getAttr $workString`;
	$vtx= <<$workXYZf[0], $workXYZf[1], 0.0>>;
	
	return( $vtx );
	}









proc string searchSC( string $meshShape )
	{
	string $cList[];
	
	$cList= `listHistory $meshShape`;
	$cList= `ls -type skinCluster $cList`;
	
	if( size($cList)==0 )return( "" );
	else return( $cList[0] );
	
	}




proc string simpleObjName( string $name )
	{
	string $ret;
	
	$ret = `substitute ".*|" $name ""`;
	
	return( $ret );
	}





global proc int DoraSkinWeightExport( string $dsw_name )
	{
	string $slList[];		
	string $shape;			
	string $sc;				
	string $jointList[];	
	int $i,$j;
	int $wp[];				
	string $workString,$workVtx;
	string $outputFileLine;	
	float $weightList[];	
	global string $gMainProgressBar;
	float $wpos[3];			
	float $uv[2];			
	int $noneUVCount;		
	int $mode;				
	string $expString;		
	
	
	
	
	
	
	$slList= `filterExpand -sm 12`;
	if( size( $slList )==0 )
		{
		
		$slList= `filterExpand -sm 31`; 
		$slList= `ls -fl $slList`;
		if( size( $slList )==0 )
			{
			
			error("No objects SmoothSkinMesh selected (1)");
			return( 0 );
			}
		else{ $mode=2; }
		}
	else{ $mode=1;}
	
	
	
	$shape= shapeName( $slList[0] );
	
	
	
	$sc= searchSC( $shape );
	if( $sc=="" )
		{
		error("No objects SmoothSkinMesh selected (2)");
		return( 0 );
		}
	
	
	$jointList= `listConnections -type "joint" ($sc+".matrix")`;
	
	
	for( $i=0 ; $i<size($jointList) ; $i++ )
		{
		$jointList[$i]= simpleObjName( $jointList[$i] );
		}
	
	$workString= checkOverlapsList( $jointList );
	if( $workString!="" )
		{
		error("JointName Overlaps [ " + $workString + "]" );
		return( 0 );
		}
	
	
	if( $mode==1 )$wp= `polyEvaluate -v $shape`;
	if( $mode==2 )$wp[0]= size( $slList );
	
	
	
	$expString= "DoraYuki Skin Weight Format 3.00\n";
	
	
	
	progressBar -edit
		-beginProgress
		-status ("Export " + basenameEx($dsw_name))
		-maxValue $wp[0]
		$gMainProgressBar;
	
	
	$outputFileLine= "";
	for( $i=0 ; $i<size($jointList) ; $i++ )
		{
		$outputFileLine+= ($jointList[$i]);
		if( $i+1 < size($jointList) )
			{
			$outputFileLine+= ",";
			}
		}
	$expString+= ( $outputFileLine + "\n" );
	
	
	$noneUVCount= 0;
	
	
	for( $i=0 ; $i<$wp[0] ; $i++ )
		{
		
		
		if( $mode==1 )$workVtx= ($shape + ".vtx[" + $i + "]");
		if( $mode==2 )$workVtx= $slList[$i];

		
		$weightList= `skinPercent -q -v $sc $workVtx`;
		
		$outputFileLine= "";
		
		for( $j=0 ; $j<size($weightList) ; $j++ )
			{
			$outputFileLine+= $weightList[$j];
			if( $j+1 < size($weightList) )
				{
				$outputFileLine+= ",";
				}
			}
		
		$outputFileLine+= "|";
		
		
		$wpos= `pointPosition -w $workVtx`;
		$outputFileLine+= ( $wpos[0] + "," + $wpos[1] + "," + $wpos[2] + "|" );
		
		
		$workString= vtx2uv($workVtx);
		
		if( $workString!="" )
			{
			$uv= `getAttr $workString`;
			}
		else
			{
			$noneUVCount++;
			warning("noneUV Vartex[ " + $i + " ]");
			$uv[0]=0.0;
			$uv[1]=0.0;
			}
		
		$outputFileLine+= ( $uv[0] + "," + $uv[1] );
		
		
		$expString+= ( $outputFileLine + "\n" );
		
		
		
		progressBar -edit
			-step 1 $gMainProgressBar;
		}
	
	
	
	string $spName[];
	tokenize $dsw_name " " $spName;
	string $exportName;
	
	
	if( $spName[0]=="[File]" )
		{
		
		$exportName = toNativePath(`workspace -q -fn` + "/" + "dsw/" + extCheck($spName[1], ".dsw"));
		
		sysFile -makeDir `dirname( $exportName )`;
		
		
		int $fileId=`fopen $exportName "w"`;
		
		if( $fileId != 0 )
			{
			
			fprint $fileId $expString;
			
			
			fclose $fileId;
			}
		else error( "Can not write DSW file" );
		}
	
	
	if( $spName[0]=="[Object]")
		{
		
		$exportName= ("dsw|" + basenameEx($spName[1]));
		
		
		if( objExists("dsw")==0 )group -em -n "dsw";
		
		
		if( objExists($exportName)==0 )group -em -n `basenameEx $spName[1]` -p "dsw";
		if( objExists($exportName+".notes")==0 )addAttr -ln "notes"  -dt "string"  $exportName;
		
		
		setAttr -type "string" ($exportName + ".notes") $expString;
		
		
		select -r $slList;
		
		}
	
	
	progressBar -edit
		-endProgress
		$gMainProgressBar;
	
	
	$i= $wp[0];
	$wp= `polyEvaluate -v $shape`;
	confirmDialog -title "DSW Exported" -message ( "[ " + $shape + " ] Vertex : " + $wp[0] + "\n\nDSW VertexPoint : " + $i + "\n\nnoneUV VertexPoint : " + $noneUVCount + "\n\nExportDSW : \n[ "+ $exportName + " ]") -button "OK" -defaultButton "OK";
	
	return( 1 );
	}




proc int compDistance( vector $xyz, vector $a, vector $b, float $distance[] )
	{
	$distance[0]= abs(mag($xyz-$a));
	$distance[1]= abs(mag($xyz-$b));
	
	if( $distance[0] > $distance[1] )return(0);
	else return(1);
	}









proc int vtxDistanceMin( vector $xyz, string $shape, int $wp, int $mode, int $setF[], float $range )
	{
	vector $vtxA;
	int $minNo;
	int $i;
	float $dis;
	
	$minNo=-1;

	for( $i=0 ; $i<$wp ; $i++ )
		{
		
		if( $setF[$i]==1 )continue;
		
		if( $mode==0 )$vtxA= vtx2vector($shape + ".vtx[" + $i + "]");
		if( $mode==1 )$vtxA= vtx2uvVector($shape + ".vtx[" + $i + "]");
		
		
		$dis= abs(mag($xyz-$vtxA));
		if( $dis<=$range )
			{
			$minNo= $i;
			return( $minNo );
			}
		}
	
	
	return( -1 );
	}





proc weightCopy( int $an, int $bn, string $sc, string $shape )
	{
	string $workString;
	string $jointList[];
	float $weightList[];
	float $weight;
	int $i;
	
	
	
	
	
	
	$jointList= `listConnections -type "joint" ($sc+".matrix")`;
	
	
	for( $i=0 ; $i<size($jointList) ; $i++ )
		{
		$jointList[$i]= simpleObjName( $jointList[$i] );
		}
	
	$workString= ($shape + ".vtx[" + $an + "]");
	$weightList= `skinPercent -q -v $sc $workString`;
	
	$workString= "";
	for( $i=0 ; $i<size($jointList); $i++ )
		{
		$weight= float($weightList[$i]);
		$workString+= ( "-tv " + $jointList[$i] + " " + $weight + " " );
		}
	
	
	
	if( $workString!="" )
		{
		$vtxName= ($shape + ".vtx[" + $bn + "]");
		$workString= ("skinPercent " + $workString + $sc + " " + $vtxName );
		eval( $workString );
		
		
		}
	
	}



proc string getParam_weightSet( string $selectJoint[], int $exist[], int $unknown[], string $joint[], string $weight[] )
	{
	string $workString= "";
	string $jName="";
	string $jWeight="";
	
	
	for( $i=0 ; $i<size($exist); $i++ )
		{
		$jName= $selectJoint[$exist[$i]];
		$jWeight=" ";
		
		
		for( $j=0 ; $j<size($joint) ; $j++ )
			{
			if( $jName==$joint[$j] )
				{
				$jWeight=$weight[$j];
				$workString+= ( "-tv " + $jName + " " + $jWeight + " " );
				break;
				}
			}
		}
	
	
	for( $i=0 ; $i<size($unknown); $i++ )
		{
		$workString+= ( "-tv " + $selectJoint[$unknown[$i]] + " 0 " );
		}
	
	return( $workString );
	}




global proc int DoraSkinWeightImport( string $dsw_name, int $importMode, int $interpolationWeight, int $interpolationMode, float $para)
	{
	global string $gDoraSkinWeightImpExp_jointNameNew[];
	string $textLine;				
	string $slList[];				
	string $shape;					
	string $sc;						
	string $jointList[];			
	string $selectMeshJointList[];	
	int $existJointN[];				
	int $unknownJointN[];			
	string $weightList[];			
	int $wp[];						
	string $vtxName;				
	int $i, $j, $k, $l;
	string $workString,$workString2;
	string $pointData[];			
	
	float $weight;
	global string $gMainProgressBar;
	string $workXYZs[];
	float $workXYZf[];
	vector $workVec[2];
	vector $wpos[2];
	int $minNo;
	float $workDistance[2];			
	
	int $weightSetF[];				
	int $dataCount;					
	int $weightSetCount;			
	int $weightSet2Count;			
	
	
	
	
	
	
	if( $dsw_name=="")
		{
		return( 0 );
		}
	
	
	
	$slList= `filterExpand -sm 12`;
	if( size( $slList )==0 )
		{
		error("No objects SmoothSkinMesh selected (1)");
		return( 0 );
		}
	
	
	$shape= shapeName( $slList[0] );
	
	
	$sc= searchSC( $shape );
	if( $sc=="" )
		{
		error("No objects SmoothSkinMesh selected (2)");
		return( 0 );
		}
	
	$selectMeshJointList= `listConnections -type "joint" ($sc+".matrix")`;
	
	
	for( $i=0 ; $i<size($selectMeshJointList) ; $i++ )
		{
		$selectMeshJointList[$i]= simpleObjName( $selectMeshJointList[$i] );
		}
	
	$workString= checkOverlapsList( $selectMeshJointList );
	if( $workString!="" )
		{
		error("JointName Overlaps [ " + $workString + "]" );
		return( 0 );
		}
	
	
	
	
	string $spName[];
	tokenize $dsw_name " " $spName;
	string $dsw_text;				
	string $dsw_line[];				
	string $ImportName;				
	
	
	if( $spName[0]=="[File]" )
		{
		
		$ImportName = (`workspace -q -fn` + "/dsw/" + $spName[1]);
		if( `filetest -r $ImportName`==0 )return( 0 );
		$dsw_text= freadAllText($ImportName);
		
		}
	
	
	if( $spName[0]=="[Object]" )
		{
		$ImportName = "dsw|"+ $spName[1] + ".notes";
		if( objExists( $ImportName )==0 )return( 0 );
		$dsw_text= getAttr( $ImportName );
		
		}
	
	
	tokenize($dsw_text, "\n",  $dsw_line );
	
	
	
	
	
	
	if( size($dsw_line)<3 )
		{
		error( "No DSW Data" );
		return( 0 );
		}
		
	
	if( $dsw_line[0]!="DoraYuki Skin Weight Format 3.00" )
		{
		error( "Not DSW Format 3.00" );
		return( 0 );
		}
	
	
	if($dsw_line[1]=="" )
		{
		error( "No DSW JointData" );
		return( 0 );
		}
	
	
	
	
	
	
	
	$wp= `polyEvaluate -v $shape`;
	
	
	for( $i=0 ; $i<$wp[0] ; $i++ )$weightSetF[$i]=0;
	
	
	tokenizeList($dsw_line[1], $jointList);
	
	
	for( $j=0 ; $j<size($jointList) ; $j++ )
		{
		$jointList[$j]= simpleObjName( $jointList[$j] );
		}
	
	
	if( `window -ex DoraSkinWeightImpExpJointNameEditWindow` == true )
		{
		for( $i=0 ; $i<size($jointList) ; $i++ )
			{
			$jointList[$i]= $gDoraSkinWeightImpExp_jointNameNew[$i];
			}
		}
	
	
	$e=0;
	$u=0;
	for( $s=0 ; $s<size($selectMeshJointList); $s++ )
		{
		$check=0;
		for( $d=0 ; $d<size($jointList) ; $d++ )
			{
			
			if( $selectMeshJointList[$s]==$jointList[$d])
				{
				$existJointN[$e]= $s;
				$e++;
				$check=1;
				break;
				}
			}
		
		if( $check==0 )
			{
			$unknownJointN[$u]=$s;
			$u++;
			}
		}
	
	
		progressBar -edit
		-beginProgress
		-status ("Import " + $dsw_name )
		-maxValue $wp[0]
		$gMainProgressBar;
	
	
	setAttr ( $sc + ".normalizeWeights") 0;
	
	
	setAttr ( $sc + ".envelope") 0;
	
	
	
	$dataCount=0;
	$weightSetCount=0;
	$weightSet2Count=0;
	
	int $r=2; 
	switch( $importMode )
		{
		
		
		
		case 0:
		for( $i=0 ; $i<$wp[0] ; $i++ )
			{
			
			
			
			
			
			if(size($dsw_line)<=$r)break;
			
			
			if($dsw_line[$r]=="")break;
			
			
			$textLine= $dsw_line[$r];
			$r++;
			
			
			
			tokenize( $textLine, "|", $pointData );
			
			
			tokenizeList($pointData[0], $weightList);
			
			
			$dataCount++;
			
			
			$workString= getParam_weightSet( $selectMeshJointList, $existJointN, $unknownJointN, $jointList, $weightList  );
			
			
			if( $workString!="" )
				{
				$vtxName= ($shape + ".vtx[" + $i + "]");
				
				$workString= ("skinPercent -r false " + $workString + $sc + " " + $vtxName );
				eval( $workString );
				$weightSetCount++;
				
				
				$weightSetF[$i]= 1;
				
				}
			
			
			progressBar -edit
				-step 1 $gMainProgressBar;
			}
		
		break;
		
		
		
		
		case 1:
		while( size($dsw_line)>$r )
			{
			
			
			
			
			if($dsw_line[$r]=="")break;
			
			
			$textLine= $dsw_line[$r];
			$r++;
			
			
			tokenize( $textLine, "|", $pointData );
			
			
			
			
			tokenizeList($pointData[0], $weightList);
			
			
			tokenizeList($pointData[1], $workXYZs);
			$wpos[0]= << float($workXYZs[0]), float($workXYZs[1]), float($workXYZs[2])>>;
			
			
			$dataCount++;
			
			
			
			
			$minNo= vtxDistanceMin( $wpos[0], $shape, $wp[0], 0, $weightSetF, $para);
			
			if( $minNo!=-1 )
				{
				
				$workString=getParam_weightSet( $selectMeshJointList, $existJointN, $unknownJointN, $jointList, $weightList  );
				
				
				if( $workString!="" )
					{
					$vtxName= ($shape + ".vtx[" + $minNo + "]");
					
					$workString= ("skinPercent -r false " + $workString + $sc + " " + $vtxName );
					
					eval( $workString );
					$weightSetCount++;
					
					
					$weightSetF[$minNo]= 1;
					}
				
				}
			
			
			progressBar -edit
				-step 1 $gMainProgressBar;
			}
		
		break;
		
		
		
		
		case 2:
		while( size($dsw_line)>$r )
			{
			
			
			
			
			if($dsw_line[$r]=="")break;
			
			
			$textLine= $dsw_line[$r];
			$r++;
			
			
			tokenize( $textLine, "|", $pointData );
			
			
			tokenizeList($pointData[0], $weightList);
			
			
			tokenizeList($pointData[2], $workXYZs);
			$wpos[0]= << float($workXYZs[0]), float($workXYZs[1]), 0>>;
			
			
			$dataCount++;
			
			
			
			
			$minNo= vtxDistanceMin( $wpos[0], $shape, $wp[0], 1, $weightSetF, $para );
			
			if( $minNo!=-1 )
				{
				
				$workString=getParam_weightSet( $selectMeshJointList, $existJointN, $unknownJointN, $jointList, $weightList  );
				
				
				if( $workString!="" )
					{
					$vtxName= ($shape + ".vtx[" + $minNo + "]");
					
					$workString= ("skinPercent -r false " + $workString + $sc + " " + $vtxName );
					
					eval( $workString );
					$weightSetCount++;
					
					$weightSetF[$minNo]= 1;
					}
				}
			
			
			progressBar -edit
				-step 1 $gMainProgressBar;
			}
		break;

		}
	
	
	

	
	
	
	
	if( $interpolationWeight == 1 )
		{
		switch( $interpolationMode )
			{
			
			case 1:
			
			$workString="";
			for( $i=0 ; $i<size($weightSetF) ; $i++ )
				{
				
				if( $weightSetF[$i]==1 )continue;
				
				
				
				
				
				$minNo= -1;
				for( $j=0 ; $j<$wp[0] ; $j++ )
					{
					
					if( $i!=$j && $weightSetF[$j]==1 )
						{
						
						$workVec[0]= vtx2vector($shape + ".vtx[" +  $j + "]");
						$minNo= $j;
						break;
						}
					
					}
				
				for( ; $j<$wp[0] ; $j++ )
					{
					
					if( $i!=$j && $weightSetF[$j]==1 )
						{
						$workVec[1]= vtx2vector($shape + ".vtx[" + $j + "]");
						
						if( compDistance( vtx2vector($shape + ".vtx[" + $i + "]"), $workVec[0], $workVec[1], $workDistance )==0 )
							{
							$workVec[0]= $workVec[1];
							$minNo= $j;
							}
						}
					}
				
				
				progressBar -edit
					-step 1 $gMainProgressBar;
				
				
				
				
				if( $minNo == -1 )break;
				
				
				weightCopy( $minNo, $i, $sc, $shape );
				$weightSet2Count++;
				
				$weightSetF[$i]=2;
				}
			break;
			
			
			case 2:
			
			$workString="";
			for( $i=0 ; $i<size($weightSetF) ; $i++ )
				{
				
				if( $weightSetF[$i]==1 )continue;
				
				
				
				
				$minNo= -1;
				for( $j=0 ; $j<$wp[0] ; $j++ )
					{
					
					if( $i!=$j && $weightSetF[$j]==1 )
						{
						
						$workVec[0]= vtx2uvVector($shape + ".vtx[" +  $j + "]");
						$minNo= $j;
						break;
						}
					
					}
				
				for( ; $j<$wp[0] ; $j++ )
					{
					
					if( $i!=$j && $weightSetF[$j]==1 )
						{
						$workVec[1]= vtx2uvVector($shape + ".vtx[" + $j + "]");
						
						if( compDistance( vtx2uvVector($shape + ".vtx[" + $i + "]"), $workVec[0], $workVec[1], $workDistance )==0 )
							{
							$workVec[0]= $workVec[1];
							$minNo= $j;
							}
						}
					}
				
				progressBar -edit
					-step 1 $gMainProgressBar;
				
				
				
				if( $minNo == -1 )break;
				
				
				weightCopy( $minNo, $i, $sc, $shape );
				$weightSet2Count++;
				
				$weightSetF[$i]=2;
				}
			
			break;
			}
		}
	
	
	
	$workString="";
	for( $i=0 ; $i<$wp[0] ; $i++)
		{
		
		switch( $weightSetF[$i]) 
			{
			case 1:
			$workString+= ($shape + ".vtx[" + $i + "] ");
			break;
			
			case 2:
			$workString2= vtx2uv( $shape + ".vtx[" + $i + "] " );
			$workString2= `substitute ".uv" $workString2 ".map"`;
			$workString+= ( $workString2 + " ");
			break;
			}
		}
	if( $workString!="" ){eval( "select " + $workString );}
	
	
	
	
	setAttr ( $sc + ".envelope") 1;
	
	
	skinPercent -normalize true $sc;
	setAttr ( $sc + ".normalizeWeights") 1;
	
	
	
	progressBar -edit
		-endProgress
		$gMainProgressBar;
	
	
	
	confirmDialog -title "DSW Imported" -message ( "[ " + $shape + " ] Vertex : " + $wp[0] +  "\n\nDSW VertexPoint : "+ $dataCount + "\n\nSetPoint : "+ ($weightSetCount + $weightSet2Count) + "\n( InterpolationPoint :" + $weightSet2Count + " )" ) -button "OK" -defaultButton "OK";
	
	return( 1 );
	}




global proc DoraSkinWeightXYZCheck()
	{
	string $ImportFileName;
	int $fileId;
	string $textLine;
	int $wp[];
	int $i, $j;
	string $workString;
	string $workXYZs[];
	string $pointData[];
	
	
	$importFileName = toNativePath(`workspace -q -fn` + "/*.dsw");
	$importFileName= `fileDialog -dm $importFileName`;
	
	if( $importFileName!="" )
		{
		
		$workString= "particle ";
		
		$fileId=`fopen $importFileName "r"`;
		
		$textLine= `fgetline $fileId`;
		$textLine= `substitute "\n" $textLine ""`;
		switch( $textLine )
			{
			
			case "DoraYuki Skin Weight Format 3.00":
			
			
			$textLine= `fgetline $fileId`;
			
			
			$textLine= `fgetline $fileId`;
			while( $textLine!="" )
				{
				$textLine= `substitute "\n" $textLine ""`;
				tokenize( $textLine, "|", $pointData );
				tokenizeList($pointData[1], $workXYZs);
				
				$workString= ( $workString + "-p " + $workXYZs[0] + " " + $workXYZs[1] + " " + $workXYZs[2] + " " );
				
				
				$textLine= `fgetline $fileId`;
				
				}
				
			break;
			}
		fclose $fileId;
		
		$workString= ( $workString + "-c 1 -n skinWeightPoint" );
		eval( $workString );
		
		addAttr -is true -ln "pointSize" -at long -min 1 -max 60 -dv 8 skinWeightPointShape;

		}
	
	}




proc string dswAppendListGet()
	{
	string $ret;
	string $list[];
	string $dswDir;
	int $i;
	
	$ret="";
	
	
	$dswDir= (`workspace -q -fn`+"/dsw/");
	$list= `getFileList -folder $dswDir -filespec "*.dsw"`;
	for( $i=0 ; $i<size( $list ) ; $i++ )
		{
		$ret= ($ret + "-a \"[File] " + $list[$i] + "\" ");
		}
	
	
	$list= `ls "dsw|*"`;
	for( $i=0 ; $i<size( $list ) ; $i++ )
		{
		$ret= ($ret + "-a \"[Object] " + $list[$i] + "\" ");
		}
	
	return $ret;
	}




global proc DoraSkinWeightFileListUpdate()
	{
	string $dswAppendList;
	string $work;
	
	
	textScrollList -e -ra DSW_TXTSL_ExpList;
	textScrollList -e -ra DSW_TXTSL_ImpList;
	
	$dswAppendList= dswAppendListGet();
	if( size( $dswAppendList ) != 0 )
		{
		$work= ("textScrollList -e " + $dswAppendList + " DSW_TXTSL_ExpList" );
		eval( $work );
		$work= ("textScrollList -e " + $dswAppendList + " DSW_TXTSL_ImpList" );
		eval( $work );
		
		
		
		
		
		
		
		
		}
	}





global proc string DoraSkinWeightTSL2BaseName( string $tsl[] )
	{
	string $spName[];
	tokenize $tsl[0] " " $spName;
	if( size( $spName )>=2 )return( $spName[1] );
	else return( $spName[0] );
	}




proc int JointNameEdit_SetgJointName()
	{
	global string $gDoraSkinWeightImpExp_jointName[];
	global string $gDoraSkinWeightImpExp_jointNameNew[];
	
	
	
	clear( $gDoraSkinWeightImpExp_jointName );
	clear( $gDoraSkinWeightImpExp_jointNameNew );
	
	
	string $impList[];
	$impList = `textScrollList -q  -si DSW_TXTSL_ImpList`;
	if( $impList[0]=="" )return(0);
	
	
	
	
	string $spName[];
	tokenize $impList[0] " " $spName;
	string $dsw_text;				
	string $dsw_line[];				
	string $ImportName;
	
	
	if( $spName[0]=="[File]" )
		{
		
		$ImportName = (`workspace -q -fn` + "/dsw/" + $spName[1]);
		if( `filetest -r $ImportName`==0 )return( 0 );
		$dsw_text= freadAllText($ImportName);
		
		}
	
	
	if( $spName[0]=="[Object]" )
		{
		$ImportName = "dsw|"+ $spName[1] + ".notes";
		if( objExists( $ImportName )==0 )return( 0 );
		$dsw_text= getAttr( $ImportName );
		
		}
	
	
	tokenize($dsw_text, "\n",  $dsw_line );
	
	
	if( $dsw_line[0]!="DoraYuki Skin Weight Format 3.00" )return(0);
	
	
	tokenizeList($dsw_line[1], $gDoraSkinWeightImpExp_jointName);
	
	
	$gDoraSkinWeightImpExp_jointNameNew= $gDoraSkinWeightImpExp_jointName;
	
	return(1);
	}




proc string JointNameEdit_jointEditListString()
	{
	global string $gDoraSkinWeightImpExp_jointName[];
	global string $gDoraSkinWeightImpExp_jointNameNew[];
	string $ret;
	
	$ret="";
	for( $i=0 ; $i<size($gDoraSkinWeightImpExp_jointName) ; $i++ )
		{
		$ret+= ( "-a \"[ " + $gDoraSkinWeightImpExp_jointName[$i] + " ] ---> [ " + $gDoraSkinWeightImpExp_jointNameNew[$i] + " ]\" " );
		}
	return( $ret );
	}




global proc JointNameEdit_listAllSelect()
	{
	int $i;
	int $n;
	
	$n= `textScrollList -q -ni DSW_TXTSL_jne_JointList`;

	
	for( $i=0 ; $i<$n ; $i++ )
		{
		textScrollList -e -sii ($i+1) DSW_TXTSL_jne_JointList;
		}

	}





proc int JointNameEdit_listUpdate()
	{
	
	if( `window -ex DoraSkinWeightImpExpJointNameEditWindow` == false )return(0);
	
	
	string $workString=JointNameEdit_jointEditListString();
	
	
	textScrollList -e -ra DSW_TXTSL_jne_JointList;
	eval( "textScrollList -e -showIndexedItem 1 " + $workString + " DSW_TXTSL_jne_JointList");
	
	return( 1 );
	}





global proc int JointNameEdit_reload()
	{
	global string $gDoraSkinWeightImpExp_jointNameNew[];
	string $workStringA[];
	
	
	if( `window -ex DoraSkinWeightImpExpJointNameEditWindow` == false ||
		`window -ex DoraSkinWeightImpExpWindow` == false ){return(0);}
	
	
	if( JointNameEdit_SetgJointName()==0 ){return(0);}
	
	
	$workStringA= `textScrollList -q  -si DSW_TXTSL_ImpList`;
	$workStringA[0]= ( $workStringA[0] + " - " + size( $gDoraSkinWeightImpExp_jointNameNew ) + " joint" );
	
	text -e -label $workStringA[0] DSW_TXT_jne_dswName;
	
	
	
	JointNameEdit_listUpdate();
	
	return( 1 );
	}






global proc int JointNameEdit_jointNameUpdate()
	{
	global string $gDoraSkinWeightImpExp_jointNameNew[];
	int $selectItem[];
	
	$selectItem= `textScrollList -q -sii DSW_TXTSL_jne_JointList`;
	
	if( size($selectItem)<=0 ){return(0);}
	
	
	$selectItem[0]=$selectItem[0]-1;
	
	textField -e -text ($gDoraSkinWeightImpExp_jointNameNew[ $selectItem[0] ] ) DSW_TXTF_jne_JointName;
	
	return( 1 );
	}






global proc int JointNameEdit_changeJointName( int $mode, int $selectMin )
	{
	global string $gDoraSkinWeightImpExp_jointNameNew[];
	int $selectItem[];
	int $i;
	string $search,$replace;
	string $workString;
	int $loop; 
	string $slList[];
	
	
	$selectItem= `textScrollList -q -sii DSW_TXTSL_jne_JointList`;
	
	if( size($selectItem)< $selectMin ){return(0);}
	
	
	for( $i=0 ; $i<size($selectItem) ; $i++ )
		{
		$selectItem[$i]=$selectItem[$i]-1;
		}
	
	
	$slList= `ls -sl`;
	$slList= `ls -fl $slList`;
	
	
	for( $loop=1, $i=0 ; $i<size($selectItem) && $loop==1  ; $i++ )
		{
		switch( $mode )
			{
			case 1:
			$gDoraSkinWeightImpExp_jointNameNew[$selectItem[$i]]=`textField -q -text DSW_TXTF_jne_JointName`;
			break;
			
			case 2:
			$workString= $gDoraSkinWeightImpExp_jointNameNew[$selectItem[0]];
			$gDoraSkinWeightImpExp_jointNameNew[$selectItem[0]]=$gDoraSkinWeightImpExp_jointNameNew[$selectItem[1]];
			$gDoraSkinWeightImpExp_jointNameNew[$selectItem[1]]=$workString;
			$loop=0;
			break;
			
			case 3:
			if( $i < size( $slList ) )
				{
				$gDoraSkinWeightImpExp_jointNameNew[$selectItem[$i]]=$slList[$i];
				}
			else{$loop=0;};
			break;
			
			case 4:
			$search= `textField -q -text DSW_TXTF_jne_search`;
			$replace= `textField -q -text DSW_TXTF_jne_replace`;
			$gDoraSkinWeightImpExp_jointNameNew[$selectItem[$i]]= substitute( $search, $gDoraSkinWeightImpExp_jointNameNew[$selectItem[$i]], $replace  );
			break;
			
			case 5:
			$gDoraSkinWeightImpExp_jointNameNew[$selectItem[$i]]=(`textField -q -text DSW_TXTF_jne_prefix` + $gDoraSkinWeightImpExp_jointNameNew[$selectItem[$i]] + `textField -q -text DSW_TXTF_jne_suffix` );
			break;
			}
		}
	
	
	JointNameEdit_listUpdate();
	
	
	for( $i=0 ; $i<size($selectItem) ; $i++ )
		{
		textScrollList -e -sii ($selectItem[$i]+1) DSW_TXTSL_jne_JointList;
		}
	
	
	return(1);
	}







global proc int DoraSkinWeightJointNameEdit()
	{
	global string $gDoraSkinWeightImpExp_jointNameNew[];
	int $i;
	string $workString;

	
	if( `window -ex DoraSkinWeightImpExpWindow` == false ){return(0);}
	
	
	if( JointNameEdit_SetgJointName()==0 ){return(0);}
	
	
	$workString=JointNameEdit_jointEditListString();
	
	
	
	if( `windowPref -ex DoraSkinWeightImpExpJointNameEditWindow` == true )
		{
		windowPref -r DoraSkinWeightImpExpJointNameEditWindow;
		}
		
	if( `window -ex DoraSkinWeightImpExpJointNameEditWindow` == true )
		{
		return(0);
		}
	
	window -wh 400 480 -t "Edit JointMap" -mxb 1 -mnb 1 -s 1 DoraSkinWeightImpExpJointNameEditWindow;
	
	formLayout DSW_JointFL;
	
		
		text -label "" DSW_TXT_jne_dswName;
		textScrollList -ams true -showIndexedItem 1 -h 180 DSW_TXTSL_jne_JointList;
		
		columnLayout DSW_CL_jne_set;
			text -label "JointName";
			textField -h 20 -w 160 DSW_TXTF_jne_JointName;
			button -label "Set JointName" -h 20 -w 160 DSW_BTN_jne_set;
		setParent ..;
		
		columnLayout DSW_CL_jne_substitution;
			text -label "Search" -h 20;
			textField -w 160 -h 20 DSW_TXTF_jne_search;
			text -label "Replace" -h 20;
			textField -w 160 -h 20 DSW_TXTF_jne_replace;
			button -label "Substitution" -h 20 -w 160 DSW_BTN_jne_substitution;
		setParent ..;
		
		columnLayout DSW_CL_jne_add;
			text -label "Prefix" -h 20;
			textField -w 160 -h 20 DSW_TXTF_jne_prefix;
			text -label "Suffix" -h 20;
			textField -w 160 -h 20 DSW_TXTF_jne_suffix;
			button -label "Add Prefix/Suffix" -h 20 -w 160 DSW_BTN_jne_add;
		setParent ..;
		
		button -label "Swap JointName" -h 20 -w 160 DSW_BTN_jne_swap;
		button -label "Set SelectObjectName" -h 20 -w 160 DSW_BTN_jne_selectName;
		
		button -label "Reset" -h 20 -w 160 DSW_BTN_jne_reset;
	
	setParent ..;
	
	
	
	formLayout -edit
		-af DSW_TXT_jne_dswName "top" 8
		-af DSW_TXT_jne_dswName "left" 0
		-ac DSW_TXTSL_jne_JointList "top" 0 DSW_TXT_jne_dswName
		-af DSW_TXTSL_jne_JointList "bottom" 0
		-ac DSW_TXTSL_jne_JointList "right" 0 DSW_CL_jne_set
		-af DSW_TXTSL_jne_JointList "left" 0
		
		-ac DSW_CL_jne_set "top" 0 DSW_TXT_jne_dswName
		-af DSW_CL_jne_set "right"  0
		
		-ac DSW_CL_jne_substitution "top" 8 DSW_CL_jne_set
		-af DSW_CL_jne_substitution "right"  0

		-ac DSW_CL_jne_add "top" 8 DSW_CL_jne_substitution
		-af DSW_CL_jne_add "right" 0

		-ac DSW_BTN_jne_swap "top" 16 DSW_CL_jne_add
		-af DSW_BTN_jne_swap "right"  0
		
		-ac DSW_BTN_jne_selectName "top" 4 DSW_BTN_jne_swap
		-af DSW_BTN_jne_selectName "right"  0
		
		-ac DSW_BTN_jne_reset "top" 16 DSW_BTN_jne_selectName
		-af DSW_BTN_jne_reset "right"  0
		
		DSW_JointFL;
	
	
	
	
	textScrollList -e -sc "JointNameEdit_jointNameUpdate()" DSW_TXTSL_jne_JointList;
	
	
	textScrollList -e -dcc "JointNameEdit_listAllSelect()" DSW_TXTSL_jne_JointList;
	
	
	button -e -c "JointNameEdit_changeJointName( 1, 1 )" DSW_BTN_jne_set;
	
	textField -e -ec "JointNameEdit_changeJointName( 1, 1 )" DSW_TXTF_jne_JointName;
	
	
	button -e -c "JointNameEdit_changeJointName( 2, 2 )" DSW_BTN_jne_swap;
	
	
	button -e -c "JointNameEdit_reload()" DSW_BTN_jne_reset;
	
	
	button -e -c "JointNameEdit_changeJointName( 4, 1 )" DSW_BTN_jne_substitution;
	
	
	button -e -c "JointNameEdit_changeJointName( 5, 1 )" DSW_BTN_jne_add;
	
	
	button -e -c "JointNameEdit_changeJointName( 3, 1 )" DSW_BTN_jne_selectName;
	
	
	
	JointNameEdit_reload();
	
	
	showWindow DoraSkinWeightImpExpJointNameEditWindow;
	
	return(1);
	}






global proc DoraSkinWeightImpExp()
	{
	global string $gDoraSkinWeight_ver;
	global int $gDoraSkinWeightImpExp_ImpMode;
	string $script;
	
	print ("Dora SkinWeight Imp/Exp " + $gDoraSkinWeight_ver + "\n" );
	
	
	if( `windowPref -ex DoraSkinWeightImpExpWindow` == true )
		{
		windowPref -r DoraSkinWeightImpExpWindow;
		}
		
	if( `window -ex DoraSkinWeightImpExpWindow` == false )
		{
		window -wh 280 480
		       -t ("Dora SkinWeight" )
		       -mnb 1 -s 1 -mxb 1
		       DoraSkinWeightImpExpWindow;
		
		$gDoraSkinWeightImpExp_ImpMode= 0;
		
		
		tabLayout DSW_TL;
		
		
		
		formLayout DSW_ImpFL;
		
			
			text -label "DSW List" -align "left" -h 20 DSW_TXT_ImpList;
			textScrollList -h 80  -shi 1 DSW_TXTSL_ImpList;
			textField -vis false DSW_TXTF_ImpName;
			
			text -label "Import Mode" -h 20 DSW_TXT_ImpMode;
			radioCollection;
				radioButton -label "Vertex Order" -sl -h 20 DSW_RDOC_ImpMode1;
				radioButton -label "XYZ Position" -h 20 DSW_RDOC_ImpMode2;
				radioButton -label "UV Position" -h 20 DSW_RDOC_ImpMode3;
			
			rowLayout -columnWidth2 80 100 -numberOfColumns 2 -h 20 DSW_RL_Accuracy;
				text -label "Accuracy" -h 20 -en false DSW_TXT_Accuracy;
				floatField -value 0.001 -pre 6 -en false -w 100 -h 20 DSW_FFLD_Accuracy;
			setParent ..;
			
			rowLayout -columnWidth3 100 60 60 -numberOfColumns 3 -h 20 DSW_RL_Interpolation;
				checkBox -label "Interpolation" -en true -value false -h 20 DSW_CKBX_Interpolation;
				radioCollection DSW_RDOC_InterpolationMode;
				radioButton -label "XYZ" -data 1 -en false -sl -h 20 DSW_RDOC_InterpolationMode1;
				radioButton -label "UV" -data 2 -en false -h 20 DSW_RDOC_InterpolationMode2;
			setParent ..;
			
			button -label "Edit JointMap" -h 20 -w 110 DSW_BTN_jne;
			button -label "Import DSW" -h 24 DSW_BTN_imp;
		
		setParent ..;
		
		
		formLayout -edit
			-af DSW_TXT_ImpList "top"      8
			-af DSW_TXT_ImpList "left"     0
			-af DSW_TXT_ImpList "right"    0
			-ac DSW_TXTSL_ImpList "top"    0 DSW_TXT_ImpList
			-af DSW_TXTSL_ImpList "left"   0
			-ac DSW_TXTSL_ImpList "bottom" 8 DSW_TXT_ImpMode
			-af DSW_TXTSL_ImpList "right"  0
			
			-ac DSW_TXT_ImpMode "bottom"   0 DSW_RDOC_ImpMode1
			-af DSW_TXT_ImpMode "left"     0
			-ac DSW_RDOC_ImpMode1 "bottom" 0 DSW_RDOC_ImpMode2
			-af DSW_RDOC_ImpMode1 "left"   0
			-ac DSW_RDOC_ImpMode2 "bottom" 0 DSW_RDOC_ImpMode3
			-af DSW_RDOC_ImpMode2 "left"   0
			-ac DSW_RDOC_ImpMode3 "bottom" 8 DSW_RL_Accuracy
			-af DSW_RDOC_ImpMode3 "left"   0
			
			-ac DSW_RL_Accuracy "bottom" 8 DSW_RL_Interpolation
			-af DSW_RL_Accuracy "left"   0
			
			-ac DSW_RL_Interpolation "bottom" 8 DSW_BTN_jne
			-af DSW_RL_Interpolation "left"   0
			
			-ac DSW_BTN_jne "bottom" 4 DSW_BTN_imp
			-af DSW_BTN_jne "left"   0
			
			-af DSW_BTN_imp "bottom" 0
			-af DSW_BTN_imp "left"   0
			-af DSW_BTN_imp "right"  0
			
			DSW_ImpFL;
		
		
		
		
		formLayout DSW_ExpFL;
		
			
			text -label "DSW List" -align "left" -h 20 DSW_TXT_ExpList;
			textScrollList -h 80  -shi 1 DSW_TXTSL_ExpList;
			text -label "Export DSW Name" -align "left" -h 20 DSW_TXT_ExpName;
			textField -h 20 -w 220 DSW_TXTF_ExpName;
			button -label "Export DSW [File]" -h 24 DSW_BTN_exp;
			button -label "Export DSW [Object]" -h 24 DSW_BTN_expObj;
		
		setParent ..;
		
		
		formLayout -edit
			-af DSW_TXT_ExpList "top"      8
			-af DSW_TXT_ExpList "left"     0
			-af DSW_TXT_ExpList "right"    0
			-ac DSW_TXTSL_ExpList "top"    0 DSW_TXT_ExpList
			-af DSW_TXTSL_ExpList "left"   0
			-ac DSW_TXTSL_ExpList "bottom" 8 DSW_TXT_ExpName
			-af DSW_TXTSL_ExpList "right"  0
			
			-ac DSW_TXT_ExpName "bottom" 0 DSW_TXTF_ExpName
			-af DSW_TXT_ExpName "left"   0
			-ac DSW_TXTF_ExpName "bottom" 8 DSW_BTN_exp
			-af DSW_TXTF_ExpName "left"   0
			-af DSW_TXTF_ExpName "right"   0
			
			-ac DSW_BTN_exp "bottom" 4 DSW_BTN_expObj
			-af DSW_BTN_exp "left"   0
			-af DSW_BTN_exp "right"  0

			-af DSW_BTN_expObj "bottom" 0
			-af DSW_BTN_expObj "left"   0
			-af DSW_BTN_expObj "right"  0
			
			DSW_ExpFL;
		
		
		
		
		formLayout DSW_etcFL;
		
			
			button -label "Check DSW XYZ Point" -h 20 DSW_BTN_chkXYZ;
		
		setParent ..;
		
		
		formLayout -edit
			-af DSW_BTN_chkXYZ "top"      8
			-af DSW_BTN_chkXYZ "left"     0
			-af DSW_BTN_chkXYZ "right"    0

			DSW_etcFL;
		
		
		tabLayout -edit
			-tabLabel DSW_ImpFL "Import"
			-tabLabel DSW_ExpFL "Export"
			-tabLabel DSW_etcFL "etc"
			DSW_TL;
		
		
		
		
		
		tabLayout -e -cc "DoraSkinWeightFileListUpdate();" -dcc "DoraSkinWeightFileListUpdate();" DSW_TL;
		
		
		$script= "textField -e -text `textScrollList -q -si DSW_TXTSL_ImpList` DSW_TXTF_ImpName;JointNameEdit_reload();";
		textScrollList -e -sc $script DSW_TXTSL_ImpList;
		
		radioButton -e -onc "$gDoraSkinWeightImpExp_ImpMode= 0;floatField -e -en false DSW_FFLD_Accuracy;text -e -en false DSW_TXT_Accuracy;" DSW_RDOC_ImpMode1;
		radioButton -e -onc "$gDoraSkinWeightImpExp_ImpMode= 1;floatField -e -en true DSW_FFLD_Accuracy;text -e -en true DSW_TXT_Accuracy;" DSW_RDOC_ImpMode2;
		radioButton -e -onc "$gDoraSkinWeightImpExp_ImpMode= 2;floatField -e -en true DSW_FFLD_Accuracy;text -e -en true DSW_TXT_Accuracy;" DSW_RDOC_ImpMode3;
		
		checkBox -e -onc "radioButton -e -en true DSW_RDOC_InterpolationMode1;radioButton -e -en true DSW_RDOC_InterpolationMode2;" DSW_CKBX_Interpolation;
		checkBox -e -ofc "radioButton -e -en false DSW_RDOC_InterpolationMode1;radioButton -e -en false DSW_RDOC_InterpolationMode2;" DSW_CKBX_Interpolation;
		
		button -edit -command "DoraSkinWeightJointNameEdit()" DSW_BTN_jne;
		
		button -edit -command "DoraSkinWeightImport( `textField -q -text DSW_TXTF_ImpName`, $gDoraSkinWeightImpExp_ImpMode, `checkBox -q -value DSW_CKBX_Interpolation`, eval( \"radioButton -q -da \" + `radioCollection -q -sl DSW_RDOC_InterpolationMode`),`floatField -q -value DSW_FFLD_Accuracy` )" DSW_BTN_imp;
		
		
		$script= "string $temp=DoraSkinWeightTSL2BaseName(`textScrollList -q -si DSW_TXTSL_ExpList`); textField -e -text $temp DSW_TXTF_ExpName;";
		textScrollList -e -sc $script DSW_TXTSL_ExpList;
		
		button -edit -command "if(`textField -q -text DSW_TXTF_ExpName`!=\"\")DoraSkinWeightExport( \"[File] \" + `textField -q -text DSW_TXTF_ExpName` );DoraSkinWeightFileListUpdate();" DSW_BTN_exp;
		button -edit -command "if(`textField -q -text DSW_TXTF_ExpName`!=\"\")DoraSkinWeightExport( \"[Object] \" + `textField -q -text DSW_TXTF_ExpName` );DoraSkinWeightFileListUpdate();" DSW_BTN_expObj;
		
		
		button -edit -command "DoraSkinWeightXYZCheck()" DSW_BTN_chkXYZ;
		
		
		
		DoraSkinWeightFileListUpdate();
		
		
		showWindow DoraSkinWeightImpExpWindow;
		

		}
	}
//DoraSkinWeightImpExp()