
#include "Common.cgh"

// The source texture
texture gSourceTex : SourceTexture
<
    string UIName = "Source Texture";
>;

// Sampler of source texture
sampler2D gSourceSamp = sampler_state
{
    Texture = <gSourceTex>;
};

// The 2nd source texture
texture gSourceTex2 : SourceTexture2
<
    string UIName = "Source Texture 2";
>;

// Sampler of 2nd source texture
sampler2D gSourceSamp2 = sampler_state
{
    Texture = <gSourceTex2>;
};

// Amount to blend source
float gBlendSrc = 0.3f;
float4 gUVTransform : RelativeViewportDimensions;
float4 gTint = {0.5, 0.5, 1.0, 1.0};

// Simple blending between 2 images
float4 PS_Blend(VS_TO_PS_ScreenQuad In) : COLOR0
{
    float4 source = tex2D(gSourceSamp, In.UV * gUVTransform.zw + gUVTransform.xy);
    float4 source2 = tex2D(gSourceSamp2, In.UV * gUVTransform.zw + gUVTransform.xy);
	float4 result = float4( lerp(source, source2 * gTint , gBlendSrc * source2.a));		
    return result;
}

// The main technique.
technique Main
{
    pass p0
    {
        VertexShader = compile glslv VS_ScreenQuad();
        PixelShader = compile glslf PS_Blend();
    }
}
